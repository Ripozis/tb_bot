# -*- coding: utf-8 -*-
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher.filters import Text
from aiogram.types import CallbackQuery, Message,\
    InlineKeyboardButton, InlineKeyboardMarkup, user
from aiogram.utils.callback_data import CallbackData
from sql import read_tbl,moder_msgid,publication_attribute_update,to_remove,content_error_update,sql_update, post_on_publik_all
import os
import time
from pyrogram import Client, filters
import requests

bot = Bot(token="2136282741:AAH4wAhuVESWI5_6uKj-lgYVAsm25OHQCV8")
dp =Dispatcher(bot)

@dp.message_handler(commands="start")
async def start(message: types.Message):
    ### –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ —Å–ø–∏—Å–æ–∫
    userid = int(message.from_user.id)

    if 467601941 == userid:
        start_buttons = ["–ü–æ—Å—Ç –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ", "–í—Å–µ –ø–æ—Å—Ç—ã –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é"]
        keyboard =types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(*start_buttons)
        await message.answer("–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ üëç", reply_markup=keyboard)
    else:
        await message.answer("–£—Ö–æ–¥–∏))")


# mid = other_command()
# print(mid)

#–í—ã–≤–æ–¥ –∫–ª–∞–≤—ã
@dp.message_handler(Text(equals="–ü–æ—Å—Ç –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ"))
async def test_message(message: types.Message):
    # await message.answer('–¢—É—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞', reply_markup=lnkb)
    re = read_tbl() 
    #row = len(re) # –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ø–∏—Å–∫–µ
    #print(row) 
    # –ü—Ä–æ—Ö–æ–¥–∏–º –≤ —Ü–∏–∫–ª–µ –ø–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º —Å–ø–∏—Å–∫–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –º–æ–¥–µ—Ä–∫—É
    for row in re:
        title = (row[0]) # –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã–±–µ—Ä–∞–µ–º 1–µ –∑–Ω–∞—á–µ–Ω–µ–∏–µ - title
        url_link = (row[1]) # –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã–±–µ—Ä–∞–µ–º 2–µ –∑–Ω–∞—á–µ–Ω–µ–∏–µ - url
        id_post = str((row[3]))
        # –í—ã–ø–æ–ª–Ω—è–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        lin = url_link.split('/')[-1] #–≤—ã—è–≤–ª—è–µ—Ç –ø–æ —Å–ª–µ—à—É –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        lin = str(id_post) + lin # –¥–æ–±–∞–≤–ª—è–µ–º id –≤ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        path_file = (lin)
        r = requests.get(url_link, allow_redirects=True)
        os.chdir(r'/home/ily/tb_bot/images')
        open(lin, 'wb').write(r.content)
        sql_update(url_link, path_file)
        print(path_file)
        file = open(path_file, 'rb')

        if '.gif' in path_file:
            print("–∞–Ω–∏–º–∞—Ü–∏—è –∏ –ø–Ω–≥")
            try: 
                await bot.send_animation(chat_id=message.from_user.id, animation=file, reply_markup=lnkb, caption=title)
                moder_id = message.message_id + 1
                moder_msgid(moder_id,id_post)
            except Exception as ex:
                print("–û—à–∏–±–∫–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π –¥–ª—è DEV" + path_file)
                print(ex)
                content_error_update(id_post) #–ü–æ–º–µ—á–∞–µ–º –ø–æ—Å—Ç —Å –æ—à–∏–±–∫–æ–π –≤ –∫–æ–Ω—Ç–µ–Ω—Ç–µ

        elif '.jpg' in path_file or '.png' in path_file or '.jpeg' in path_file:
            try:
                await bot.send_photo(chat_id=message.from_user.id, photo=file, reply_markup=lnkb, caption=title)
                moder_id = message.message_id + 1
                moder_msgid(moder_id,id_post)
            except Exception as ex:
                print("–û—à–∏–±–∫–∞ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π –¥–ª—è DEV" + path_file)
                print(ex)
                content_error_update(id_post) #–ü–æ–º–µ—á–∞–µ–º –ø–æ—Å—Ç —Å –æ—à–∏–±–∫–æ–π –≤ –∫–æ–Ω—Ç–µ–Ω—Ç–µ

        elif '.mp4' in path_file:
            print("–û—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ")
            try:
                await bot.send_video(chat_id=message.from_user.id, video=file, reply_markup=lnkb, caption=title)
                moder_id = message.message_id + 1
                moder_msgid(moder_id,id_post)
            except Exception as ex:
                print("–û—à–∏–±–∫–∞ —Å –≤–∏–¥–µ–æ –¥–ª—è DEV" + path_file)
                print(ex)
                content_error_update(id_post) #–ü–æ–º–µ—á–∞–µ–º –ø–æ—Å—Ç —Å –æ—à–∏–±–∫–æ–π –≤ –∫–æ–Ω—Ç–µ–Ω—Ç–µ        

        # await bot.send_photo(
        #     chat_id=message.from_user.id, photo=file, reply_markup=lnkb, caption=title)
        # moder_id = message.message_id + 1
        # moder_msgid(moder_id,id_post)
        # # print(mid)
        
@dp.message_handler(Text(equals="–í—Å–µ –ø–æ—Å—Ç—ã –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é"))
async def test_message(message: types.Message):
    post_on_publ_all = post_on_publik_all()
    for row in post_on_publ_all:
        post_on_publ_all = str(row[0])
        print(post_on_publ_all)
        await message.answer('–í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤ –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é: ' + post_on_publ_all)

## –û–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
lnkb = InlineKeyboardMarkup(row_width=2).add(InlineKeyboardButton(text='–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', callback_data='pudlik'),\
                            InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å', callback_data='del'))


##–¥–µ–π—Å—Ç–≤–∏–µ –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å'
@dp.callback_query_handler(text='pudlik')
async def public_priz(calback : types.CallbackQuery):
    moder_id = calback.message.message_id
    publication_attribute_update(moder_id) # –°–¥–µ–ª–∞—Ç—å –ø–æ–∏—Å–∫ –ø–æ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º—É id –∏ –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–∑–Ω–∞–∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–∞ "1"
    print(moder_id) # id –°–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é 
    print('–°—Ä–∞–±–æ—Ç–∞–ª–∞ –∫–Ω–æ–ø–∫–∞ "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"')
    await calback.answer('–ü–æ—Å—Ç –ø—Ä–∏–Ω—è—Ç –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é')
    await calback.message.answer('–ü–æ—Å—Ç –ø—Ä–∏–Ω—è—Ç –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é')

##–¥–µ–π—Å—Ç–≤–∏–µ –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ '–£–¥–∞–ª–∏—Ç—å'
@dp.callback_query_handler(text='del')
async def public_priz(calback : types.CallbackQuery,):
    moder_id = calback.message.message_id
    to_remove(moder_id)
    # id –°–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ 
    print('–°—Ä–∞–±–æ—Ç–∞–ª–∞ –∫–Ω–æ–ø–∫–∞ "–£–¥–∞–ª–∏—Ç—å"')
    await calback.answer("–ü–æ—Å—Ç –ø–æ–º–µ—á–µ–Ω –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ")
    await calback.message.answer('–ü–æ—Å—Ç –ø–æ–º–µ—á–µ–Ω –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ')

# def kb_likes():
#     likes = num["likes"]
#     dislikes = num["dislikes"]
#     kb = types.InlineKeyboardMarkup()
#     kb.add(types.InlineKeyboardButton(text=f"üëç {likes}", callback_data="like"),
#            types.InlineKeyboardButton(text=f"üëé {dislikes}", callback_data="dislike"))
#     return kb

# #—Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞
# @dp.channel_post_handler()
# async def add_like(mes):
#     cid = mes.chat.id
#     mid = mes.message_id
#     await bot.edit_message_reply_markup(chat_id=cid, message_id=mid, reply_markup=kb_likes(mid))

# #—Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É
# @dp.callback_query_handler()
# async def callback(call):
#     cid = call.message.chat.id
#     uid = call.from_user.id
#     mid = call.message.message_id
#     cdata = call.data
#     try:
#         await bot.edit_message_reply_markup(chat_id=cid, message_id=mid, reply_markup=kb_likes())
#     except:
#         pass

#----------------
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)

#----------------